{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neerush Buchi\\\\Desktop\\\\Neerush Folder\\\\HMS\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\n\n// Create context with undefined default value\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Custom hook to use auth context\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n// Provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const userData = localStorage.getItem('user');\n        if (!token || !userData) {\n          // If no token or user data, clear everything\n          logout();\n          return;\n        }\n\n        // Validate token with the backend\n        try {\n          await api.get('/auth/verify', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUser(JSON.parse(userData));\n        } catch (error) {\n          // If token is invalid, clear everything\n          console.error('Token validation failed:', error);\n          logout();\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.status === 'success') {\n        const {\n          token,\n          data\n        } = response.data;\n\n        // Store auth data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n\n        // Update axios default headers\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Update state\n        setUser(data.user);\n        return {\n          success: true,\n          data\n        };\n      } else {\n        throw new Error(response.data.message || 'Login failed');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Clear any partial data on error\n      logout();\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading\n  };\n  if (loading) return null;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\n;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","userData","logout","get","headers","Authorization","JSON","parse","error","console","login","email","password","response","post","data","status","setItem","stringify","defaults","common","success","message","_error$response","_error$response$data","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Neerush Buchi/Desktop/Neerush Folder/HMS/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\n// Create context with undefined default value\r\nconst AuthContext = createContext(undefined);\r\n\r\n// Custom hook to use auth context\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Provider component\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const userData = localStorage.getItem('user');\r\n        \r\n        if (!token || !userData) {\r\n          // If no token or user data, clear everything\r\n          logout();\r\n          return;\r\n        }\r\n\r\n        // Validate token with the backend\r\n        try {\r\n          await api.get('/auth/verify', {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          });\r\n          setUser(JSON.parse(userData));\r\n        } catch (error) {\r\n          // If token is invalid, clear everything\r\n          console.error('Token validation failed:', error);\r\n          logout();\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check failed:', error);\r\n        logout();\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      \r\n      if (response.data.status === 'success') {\r\n        const { token, data } = response.data;\r\n        \r\n        // Store auth data\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        \r\n        // Update axios default headers\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        \r\n        // Update state\r\n        setUser(data.user);\r\n        \r\n        return { success: true, data };\r\n      } else {\r\n        throw new Error(response.data.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      // Clear any partial data on error\r\n      logout();\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || error.message || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  if (loading) return null;\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}