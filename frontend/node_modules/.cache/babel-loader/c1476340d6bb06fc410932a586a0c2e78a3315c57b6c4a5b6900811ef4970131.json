{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neerush Buchi\\\\Desktop\\\\Neerush Folder\\\\HMS\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        setUser(JSON.parse(userData));\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.status === 'success') {\n        const {\n          token,\n          data\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return {\n          success: true,\n          data: data\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const patientSignup = async userData => {\n    try {\n      const response = await api.post('/auth/patient/signup', userData);\n      if (response.data.status === 'success') {\n        const {\n          token,\n          data\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return {\n          success: true,\n          data: data\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Signup failed';\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    patientSignup,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","userData","JSON","parse","error","console","logout","login","email","password","response","post","data","status","setItem","stringify","success","_error$response","_error$response$data","errorMessage","message","patientSignup","_error$response2","_error$response2$data","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Neerush Buchi/Desktop/Neerush Folder/HMS/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const userData = localStorage.getItem('user');\r\n      \r\n      if (token && userData) {\r\n        setUser(JSON.parse(userData));\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      \r\n      if (response.data.status === 'success') {\r\n        const { token, data } = response.data;\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        setUser(data.user);\r\n        \r\n        return { success: true, data: data };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed';\r\n      return { \r\n        success: false, \r\n        message: errorMessage \r\n      };\r\n    }\r\n  };\r\n\r\n  const patientSignup = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/patient/signup', userData);\r\n      \r\n      if (response.data.status === 'success') {\r\n        const { token, data } = response.data;\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        setUser(data.user);\r\n        \r\n        return { success: true, data: data };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Signup failed';\r\n      return { \r\n        success: false, \r\n        message: errorMessage \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    patientSignup,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}