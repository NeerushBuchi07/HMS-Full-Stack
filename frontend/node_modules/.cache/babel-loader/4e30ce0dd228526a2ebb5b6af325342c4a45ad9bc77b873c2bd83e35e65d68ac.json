{"ast":null,"code":"var _jsxFileName = \"D:\\\\Neerush Folder\\\\HMS\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        const userObj = JSON.parse(userData);\n        setUser(userObj);\n\n        // Verify token is still valid\n        try {\n          await api.get('/auth/test');\n        } catch (error) {\n          console.log('Token invalid, logging out...');\n          logout();\n        }\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setError('');\n      console.log('Attempting login with:', {\n        email\n      });\n      const response = await api.post('/auth/login', {\n        email: email.trim(),\n        password: password\n      });\n      console.log('Login response:', response.data);\n      if (response.data.status === 'success') {\n        const {\n          token,\n          data\n        } = response.data;\n\n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return {\n          success: true,\n          data: data\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message || 'Login failed'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error details:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed. Please check your credentials and try again.';\n      setError(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const patientSignup = async userData => {\n    try {\n      setError('');\n      console.log('Attempting signup with:', userData);\n\n      // Clean the data\n      const cleanData = {\n        ...userData,\n        email: userData.email.trim().toLowerCase(),\n        username: userData.username.trim(),\n        phone: userData.phone.trim(),\n        fullName: userData.fullName.trim()\n      };\n      const response = await api.post('/auth/patient/signup', cleanData);\n      console.log('Signup response:', response.data);\n      if (response.data.status === 'success') {\n        const {\n          token,\n          data\n        } = response.data;\n\n        // Store token and user data\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return {\n          success: true,\n          data: data\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message || 'Signup failed'\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response3$data;\n      console.error('Signup error details:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Signup failed. Please check your information and try again.';\n      setError(errorMessage);\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    console.log('Logging out user...');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setError('');\n  };\n  const clearError = () => setError('');\n  const value = {\n    user,\n    login,\n    patientSignup,\n    logout,\n    loading,\n    error,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uhK5DVO1lnMu6N43kGsC7HYFAr0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","checkAuthStatus","token","localStorage","getItem","userData","userObj","JSON","parse","get","console","log","logout","login","email","password","response","post","trim","data","status","setItem","stringify","success","message","_error$response","_error$response$data","errorMessage","patientSignup","cleanData","toLowerCase","username","phone","fullName","_error$response2","_error$response3","_error$response3$data","removeItem","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Neerush Folder/HMS/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const userData = localStorage.getItem('user');\r\n      \r\n      if (token && userData) {\r\n        const userObj = JSON.parse(userData);\r\n        setUser(userObj);\r\n        \r\n        // Verify token is still valid\r\n        try {\r\n          await api.get('/auth/test');\r\n        } catch (error) {\r\n          console.log('Token invalid, logging out...');\r\n          logout();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError('');\r\n      console.log('Attempting login with:', { email });\r\n      \r\n      const response = await api.post('/auth/login', { \r\n        email: email.trim(),\r\n        password: password \r\n      });\r\n      \r\n      console.log('Login response:', response.data);\r\n      \r\n      if (response.data.status === 'success') {\r\n        const { token, data } = response.data;\r\n        \r\n        // Store token and user data\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        setUser(data.user);\r\n        \r\n        return { success: true, data: data };\r\n      } else {\r\n        return { \r\n          success: false, \r\n          message: response.data.message || 'Login failed' \r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error details:', error);\r\n      const errorMessage = error.response?.data?.message || \r\n                          error.message || \r\n                          'Login failed. Please check your credentials and try again.';\r\n      setError(errorMessage);\r\n      return { \r\n        success: false, \r\n        message: errorMessage \r\n      };\r\n    }\r\n  };\r\n\r\n  const patientSignup = async (userData) => {\r\n    try {\r\n      setError('');\r\n      console.log('Attempting signup with:', userData);\r\n      \r\n      // Clean the data\r\n      const cleanData = {\r\n        ...userData,\r\n        email: userData.email.trim().toLowerCase(),\r\n        username: userData.username.trim(),\r\n        phone: userData.phone.trim(),\r\n        fullName: userData.fullName.trim()\r\n      };\r\n      \r\n      const response = await api.post('/auth/patient/signup', cleanData);\r\n      \r\n      console.log('Signup response:', response.data);\r\n      \r\n      if (response.data.status === 'success') {\r\n        const { token, data } = response.data;\r\n        \r\n        // Store token and user data\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        setUser(data.user);\r\n        \r\n        return { success: true, data: data };\r\n      } else {\r\n        return { \r\n          success: false, \r\n          message: response.data.message || 'Signup failed' \r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Signup error details:', error.response?.data || error);\r\n      const errorMessage = error.response?.data?.message || \r\n                          error.message || \r\n                          'Signup failed. Please check your information and try again.';\r\n      setError(errorMessage);\r\n      return { \r\n        success: false, \r\n        message: errorMessage \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    console.log('Logging out user...');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setError('');\r\n  };\r\n\r\n  const clearError = () => setError('');\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    patientSignup,\r\n    logout,\r\n    loading,\r\n    error,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}